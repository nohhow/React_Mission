{"ast":null,"code":"var _jsxFileName = \"/Users/nojinhyeon/the-origin-react/react-basic-app/src/components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    id,\n    title,\n    completed,\n    todoData,\n    setTodoData,\n    provided,\n    snapshot,\n    handleClick\n  } = _ref;\n  console.log(\"List rendering\");\n\n  const handleCompleteChange = id => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !completed;\n      }\n\n      return data;\n    });\n    setTodoData(newTodoData);\n  };\n\n  const [isEditing, saveEditState] = useState(false);\n\n  if (isEditing) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n      ref: provided.innerRef,\n      ...provided.dragHandleProps,\n      className: `${snapshot.isDragging ? \"bg-gray-300\" : \"bg-gray-100\"} flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"mr-2\",\n          type: \"checkbox\",\n          onClick: () => handleCompleteChange(id),\n          defaultChecked: completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: completed ? \"line-through\" : undefined,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-sm mx-3 my-2 float-left text-gray-500\",\n          onClick: () => {\n            saveEditState(true);\n          },\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-sm px-1 my-2 float-right bg-red-400 text-white rounded\",\n          onClick: () => {\n            handleClick(id);\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n}, \"RSMiR+HvRhk6bm1ue34rmjLaGSg=\")), \"RSMiR+HvRhk6bm1ue34rmjLaGSg=\");\n\n_c2 = List;\nexport default List;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List$React.memo\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"sources":["/Users/nojinhyeon/the-origin-react/react-basic-app/src/components/List.js"],"names":["React","useState","List","memo","id","title","completed","todoData","setTodoData","provided","snapshot","handleClick","console","log","handleCompleteChange","newTodoData","map","data","isEditing","saveEditState","draggableProps","innerRef","dragHandleProps","isDragging","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,iCAAGF,KAAK,CAACG,IAAN,SACX,QASM;AAAA;;AAAA,MATL;AACCC,IAAAA,EADD;AAECC,IAAAA,KAFD;AAGCC,IAAAA,SAHD;AAICC,IAAAA,QAJD;AAKCC,IAAAA,WALD;AAMCC,IAAAA,QAND;AAOCC,IAAAA,QAPD;AAQCC,IAAAA;AARD,GASK;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AAEA,QAAMC,oBAAoB,GAAIV,EAAD,IAAQ;AACnC,QAAIW,WAAW,GAAGR,QAAQ,CAACS,GAAT,CAAcC,IAAD,IAAU;AACvC,UAAIA,IAAI,CAACb,EAAL,KAAYA,EAAhB,EAAoB;AAClBa,QAAAA,IAAI,CAACX,SAAL,GAAiB,CAACA,SAAlB;AACD;;AACD,aAAOW,IAAP;AACD,KALiB,CAAlB;AAMAT,IAAAA,WAAW,CAACO,WAAD,CAAX;AACD,GARD;;AAUA,QAAM,CAACG,SAAD,EAAYC,aAAZ,IAA6BlB,QAAQ,CAAC,KAAD,CAA3C;;AAEA,MAAGiB,SAAH,EAAa;AACT,wBACI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAOI;AACA,wBACI,oBAEMT,QAAQ,CAACW,cAFf;AAGE,MAAA,GAAG,EAAEX,QAAQ,CAACY,QAHhB;AAAA,SAIMZ,QAAQ,CAACa,eAJf;AAKE,MAAA,SAAS,EAAG,GACVZ,QAAQ,CAACa,UAAT,GAAsB,aAAtB,GAAsC,aACvC,mGAPH;AAAA,8BASE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,OAAO,EAAE,MAAMT,oBAAoB,CAACV,EAAD,CAHrC;AAIE,UAAA,cAAc,EAAEE;AAJlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAM,UAAA,SAAS,EAAEA,SAAS,GAAG,cAAH,GAAoBkB,SAA9C;AAAA,oBACGnB;AADH;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAoBE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,4CADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACXc,YAAAA,aAAa,CAAC,IAAD,CAAb;AACH,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AACE,UAAA,SAAS,EAAC,6DADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbR,YAAAA,WAAW,CAACP,EAAD,CAAX;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA,OACOA,EADP;AAAA;AAAA;AAAA;AAAA,YADJ;AAyCH;AAEF,CA5EU,kCAAH,iCAAV;;MAAMF,I;AA+EN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst List = React.memo(\n  ({\n    id,\n    title,\n    completed,\n    todoData,\n    setTodoData,\n    provided,\n    snapshot,\n    handleClick,\n  }) => {\n    console.log(\"List rendering\");\n\n    const handleCompleteChange = (id) => {\n      let newTodoData = todoData.map((data) => {\n        if (data.id === id) {\n          data.completed = !completed;\n        }\n        return data;\n      });\n      setTodoData(newTodoData);\n    };\n\n    const [isEditing, saveEditState] = useState(false);\n\n    if(isEditing){\n        return(\n            <form>\n                <input type=\"text\" name=\"value\"/>\n            </form>\n        )\n    }\n    else{\n        return (\n            <div\n              key={id}\n              {...provided.draggableProps}\n              ref={provided.innerRef}\n              {...provided.dragHandleProps}\n              className={`${\n                snapshot.isDragging ? \"bg-gray-300\" : \"bg-gray-100\"\n              } flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`}\n            >\n              <div className=\"items-center\">\n                <input\n                  className=\"mr-2\"\n                  type=\"checkbox\"\n                  onClick={() => handleCompleteChange(id)}\n                  defaultChecked={completed}\n                />\n                <span className={completed ? \"line-through\" : undefined}>\n                  {title}\n                </span>\n              </div>\n              <div className=\"items-center\">\n                <button\n                  className=\"text-sm mx-3 my-2 float-left text-gray-500\"\n                  onClick={() => {\n                      saveEditState(true);\n                  }}\n                >\n                    수정\n                </button>\n                <button\n                  className=\"text-sm px-1 my-2 float-right bg-red-400 text-white rounded\"\n                  onClick={() => {\n                    handleClick(id);\n                  }}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n          );\n    }\n\n  }\n);\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}